# List the name of each field and
# what you believe the data type and intent is of the data included in each field
colnames(df)
str(df)
nrow(df)
ncol(df)
myHistogramDen <- myHistogram + geom_histogram(aes(y=after_stat(density))) +
geom_density(col = "red")
myHistogramDen
{
print i
{
print(i)
}
{
print(i)
}
# Loops
for(i in 1:10)
{
print(i)
}
print(1:10)
# Build a vector holding fruit names
fruits <- c("apple", "banana", "pomegranate")
# Make a variable to hold their lengths, with all NA to start
fruitLengths <- rep(NA, length(fruits))
# show it all NAs
fruitLengths
for(c in fruits)
{
fruitLengths(c) <- nchar(c)
}
for(c in fruits)
{
fruitLengths[c] <- nchar(c)
}
# Now show fruitlengths filled
fruitLengths
# Now show fruitlengths filled
fruitLengths
fruitLengths <- rep(NA, length(fruits))
fruitLengths
for(c in fruits)
{
fruitLengths[c] <- nchar(c)
}
fruitLengths
# Built in Vectorization makes this simpler
fruitLengths2 <- nchar(fruits)
# Give it names
names(fruitLengths2) <- fruits
# Display it
fruitLengths2
# Moving to While Loops!
x <- 1
{
print(x)
x <- x+1
}
while(x <= 5)
{
print(x)
x <- x+1
}
x <- 1
while(x <= 5)
{
print(x)
x <- x+1
x <- 1
while(x <= 5)
{
print(x)
x <- x+1
{
print(x)
x <- x+1
}
# Moving to While Loops!
x <- 1
while(x <= 5)
{
print(x)
x <- x+1
}
{
print(x)
x <- x+1
}
# Moving to While Loops!
x <- 1
{
print(x)
x <- x+1
}
while(x <= 5)
{
print(x)
x <- x+1
}
x <- 1
while(x <= 5)
{
print(x)
x <- x+1
}
# Moving to While Loops!
x <- 1
# Moving to While Loops!
x <- 1
x <- x+1
{
print(x)
x <- x+1
}
source("~/DSC520 Exercises from Book/Chapter 10 Loops.R", echo=TRUE)
x <- 1
while(x <= 5)
{
print(x)
x <- x+1
for (i in 1:10)
{
if(i == 3)
{
next
}
print(i)
}
for (i in 1:10)
{
if(i == 3)
{
next
}
print(i)
}
for(i in 1:10)
{
if(i == 4)
{
break
}
print(i)
}
# Chapter 11 Group Manipulation
# Working with "apply"
# Apply can only be used on a matrix (all the same data types)
# Build a Matrix
theMatrix <- matrix(1:9, nrow=3)
theMatrix
# Sum the Matrix
apply(theMatrix, 1, sum)
# Sum the columns
apply(theMatrix, 2, sum)
# Setting elements of matrix to NA for experiment
theMatrix[2, 1] <- NA
apply(theMatrix, 1, sum)
# If one element is NA the sum becomes NA, use na.rm=TRUE to remove the NAs
apply(theMatrix, 1, sum, na.rm=TRUE)
# Using lapply
# lapply apllies a function to each element of a list and returns  a list
# Create a list
theList <- list(A=matrix(1:9, 3), B=1:5, C=matrix(1:4, 2), D=2)
lapply(theList, sum)
#sapply is exactly the same as lapply except it returns a vector
sapply(theList, sum)
# lapply and sapply can take a vector as the input as well
theNames <- c("Jared", "Deb", "Paul")
lapply(theNames, nchar)
df <- read.csv(scores.csv)
df <- read.csv(~/DSC520 Assignment PDFs/scores.csv)
df <- read.csv(~DSC520 Assignment PDFs/scores.csv)
df <- read.csv(DSC520 Assignment PDFs/scores.csv)
df <- read.csv(/DSC520 Assignment PDFs/scores.csv)
df <- read.csv(~/DSC520 Assignment PDFs)
print(getwd())
df <- read.csv(C:/Users/rbrio/OneDrive/Documents/
df <- read.csv(Users/rbrio/OneDrive/Documents/
DSC520 Assignment PDFs/"scores.csv")
read.csv(Users/rbrio/OneDrive/Documents/
DSC520 Assignment PDFs/"scores.csv")
setwd(Users/rbrio/OneDrive/Documents/
DSC520 Assignment PDFs)
setwd(C:/Users/rbrio/OneDrive/Documents/DSC520 Assignment PDFs)
setwd(~/DSC520 Assignment PDFs)
read.csv("scores.csv")
print(getwd())
read.csv("scores.csv")
df <- read.csv("scores.csv")
df <- read.csv("scores.csv")
head(df)
colnames(df)
library(plyr)
# Save the .csv file as a variable once read
df <- read.csv("scores.csv")
# Save the .csv file as a variable once read
df <- read.csv("scores.csv")
colnames(df) # Calling colnames to see the variables
library(plyr)
library(ggplot2)
df <- read.csv("scores.csv") # Save the .csv file as a variable once read
head(df) # Calling head on the data frame to see a section of the contents
colnames(df) # Calling colnames to see the variables
# Variables include "Count", "Score", and "Section"
# "Count" is quantitative, "Score" is quantitative, "Section" is categorical
regular <- subset(df, Section == "Regular")
sports <- subset(df, Section == "Sports")
# head(regular)
# sports
ggplot(data=regular) +
geom_point(mapping=aes("score","count"))
# head(regular)
# sports
ggplot(data=regular) +
geom_point(mapping=aes(score,count))
# head(regular)
# sports
ggplot(data=regular) +
geom_point(mapping=aes(Score,Count))
# head(regular)
# sports
ggplot(data=regular) +
geom_smooth(mapping=aes(Score,Count))
# head(regular)
# sports
regular_plot <- ggplot(data=regular) +
geom_smooth(mapping=aes(Score,Count))
sports_plot <- ggplot(data=regular) +
geom_smooth(mapping=aes(Score,Count))
sports_plot
sports_plot <- ggplot(data=sports) +
geom_smooth(mapping=aes(Score,Count))
sports_plot
View(regular_plot)
# head(regular)
# sports
regular_plot <- ggplot(data=regular) +
geom_line(mapping=aes(Score,Count))
regular_plot
# head(regular)
# sports
regular_plot <- ggplot(data=regular) +
geom_line(mapping=aes(Score,Count)) +
ggtitle("Scores for Regular Section")
regular_plot
ggtitle("Scores for Sports Section")
sports_plot
ggtitle("Scores for Sports Section")
sports_plot
sports_plot <- ggplot(data=sports) +
geom_line(mapping=aes(Score,Count))
ggtitle("Scores for Sports Section")
sports_plot
View(sports)
sports_plot <- ggplot(data=sports) +
geom_point(mapping=aes(Score,Count))
ggtitle("Scores for Sports Section")
sports_plot
regular_plot <- ggplot(data=regular) +
geom_point(mapping=aes(Score,Count)) +
ggtitle("Scores for Regular Section")
regular_plot
sports_plot
regular_plot <- ggplot(data=regular) +
geom_density(mapping=aes(Score,Count)) +
ggtitle("Scores for Regular Section")
regular_plot
regular_plot <- ggplot(data=regular) +
geom_point(mapping=aes(Score,Count)) +
ggtitle("Scores for Regular Section")
regular_plot
combined_plot <- ggplot() +
geom_point(data=regular, aes(Score,Count),
fill = "dark green", color = "black",
size = 5, shape =21) +
geom_point(data=sports, aes(Score,Count),
fill = "red", color = "black",
size = 5, shape = 21) +
labs(x="Scores", y="Count") +
ggtitle("Combined Plots")
combined_plot
combined_plot <- ggplot() +
geom_point(data=regular, aes(Count,Score),
fill = "dark green", color = "black",
size = 5, shape =21) +
geom_point(data=sports, aes(Count,Score),
fill = "red", color = "black",
size = 5, shape = 21) +
labs(x="Scores", y="Count") +
ggtitle("Combined Plots")
combined_plot
regular_plot
regular_plot <- ggplot(data=regular) +
geom_line(mapping=aes(Score,Count)) +
ggtitle("Scores for Regular Section")
regular_plot
regular_scores <- regular$Score
regular_counts <- regular$Count
plot(regular_scores,regular_counts)
regular_plot
regular_plot <- ggplot(data=regular) +
geom_point(mapping=aes(Score,Count)) +
ggtitle("Scores for Regular Section")
regular_plot
plot(regular_scores,regular_counts)
combined_plot <- ggplot() +
geom_point(data=regular, aes(Count,Score),
fill = "black", color = "black",
size = 5, shape =21) +
geom_point(data=sports, aes(Count,Score),
fill = "red", color = "black",
size = 5, shape = 21) +
labs(x="Scores", y="Count") +
ggtitle("Combined Plots")
combined_plot
combined_plot <- ggplot() +
geom_point(data=regular, aes(Score,Count),
fill = "black", color = "black",
size = 5, shape =21) +
geom_point(data=sports, aes(Score,Count),
fill = "red", color = "black",
size = 5, shape = 21) +
labs(x="Scores", y="Count") +
ggtitle("Combined Plots")
combined_plot
mean(regular_scores)
regular_mean <- mean(regular_scores)
regular_plot <- ggplot(data=regular) +
geom_point(mapping=aes(Score,Count)) +
geom_hline(data = regular_mean, aes()) +
ggtitle("Scores for Regular Section")
regular_plot <- ggplot(data=regular) +
geom_point(mapping=aes(Score,Count)) +
geom_vline(xintercept = regular_mean)
ggtitle("Scores for Regular Section")
regular_plot
combined_plot <- ggplot() +
geom_point(data=regular, aes(Score,Count),
fill = "black", color = "black",
size = 5, shape =21) +
geom_point(data=sports, aes(Score,Count),
fill = "red", color = "black",
size = 5, shape = 21) +
geom_vline(xintercept = regular_mean) +
labs(x="Scores", y="Count") +
ggtitle("Combined Plots")
combined_plot
sports_mean <- mean(sports$Score)
sports_mean
combined_plot <- ggplot() +
geom_point(data=regular, aes(Score,Count),
fill = "black", color = "black",
size = 5, shape =21) +
geom_point(data=sports, aes(Score,Count),
fill = "red", color = "black",
size = 5, shape = 21) +
geom_vline(xintercept = regular_mean) +
geom_vline(xintercept = sports_mean)
labs(x="Scores", y="Count") +
ggtitle("Combined Plots")
combined_plot <- ggplot() +
geom_point(data=regular, aes(Score,Count),
fill = "black", color = "black",
size = 5, shape =21) +
geom_point(data=sports, aes(Score,Count),
fill = "red", color = "black",
size = 5, shape = 21) +
geom_vline(xintercept = regular_mean) +
geom_vline(xintercept = sports_mean) +
labs(x="Scores", y="Count") +
ggtitle("Combined Plots")
combined_plot
combined_plot <- ggplot() +
geom_point(data=regular, aes(Score,Count),
fill = "black", color = "black",
size = 5, shape =21) +
geom_point(data=sports, aes(Score,Count),
fill = "red", color = "black",
size = 5, shape = 21) +
geom_vline(xintercept = regular_mean, color = "green") +
geom_vline(xintercept = sports_mean) +
labs(x="Scores", y="Count") +
ggtitle("Combined Plots")
combined_plot
combined_plot <- ggplot() +
geom_point(data=regular, aes(Score,Count),
fill = "black", color = "black",
size = 5, shape =21) +
geom_point(data=sports, aes(Score,Count),
fill = "red", color = "black",
size = 5, shape = 21) +
geom_vline(xintercept = regular_mean, color = "black") +
geom_vline(xintercept = sports_mean, color = "red") +
labs(x="Scores", y="Count") +
ggtitle("Combined Plots")
combined_plot
hist(regular_scores)
hist(regular_scores) + hist(sports$Score)
hist(sports$Score)
hist(regular_scores)
hist(sports$Score)
combined_plot <- ggplot() +
geom_point(data=regular, aes(Score,Count),
fill = "green", color = "black",
size = 5, shape =21) +
geom_point(data=sports, aes(Score,Count),
fill = "red", color = "black",
size = 5, shape = 21) +
geom_vline(xintercept = regular_mean, color = "green") +
geom_vline(xintercept = sports_mean, color = "red") +
labs(x="Scores", y="Count") +
ggtitle("Combined Plots")
combined_plot
geom_col(data=regular)
test_bar <- geom_col(data=regular)
test_bar
test_bar <- geom_col(data=regular, aes(regular$Score))
test_bar
test_bar <- geom_col(data=regular, aes(regular$Score))
test_bar
test_bar <- geom_bar(data=regular, aes(regular$Score))
test_bar
combined_plot <- ggplot() + # Combining the data frames to plot
geom_point(data=regular, aes(Score, Count),
fill = "green", color = "black",
size = 2, shape =21) +
geom_point(data=sports, aes(Score,Count),
fill = "red", color = "black",
size = 2, shape = 21) +
geom_vline(xintercept = regular_mean, color = "green") + # Adds a vertical
# mean line for the regular scores
geom_vline(xintercept = sports_mean, color = "red") + # Adds a vertical mean
# line for the sports scores
labs(x="Number of Students Scoring", y="Scores") +
ggtitle("Combined Plots")
library(ggplot2)
df <- read.csv("scores.csv") # Save the .csv file as a variable once read
head(df) # Calling head on the data frame to see a section of the contents
# 1. What are the observational units in this study?
# The observational units of the study are "Scores" and "Counts"
colnames(df) # Calling colnames to see the variables
# 2. Identify the variables mentioned in the narrative paragraph and determine
# which are categorical and quantitative?
# Variables include "Count", "Score", and "Section"
# "Count" is quantitative, "Score" is quantitative, "Section" is categorical
# 3. Create one variable to hold a subset of your data set that contains only
# the Regular Section and one variable for the Sports Section.
regular <- subset(df, Section == "Regular") # Creates a subset of data from the
# original data frame that only includes the "Regular" section scores and counts
sports <- subset(df, Section == "Sports") # Creates a subset of data from the
# original data frame that only includes the "Sports" section of scores and
# counts
# 4. Use the Plot function to plot each Sections scores and the number of
# students achieving that score.
regular_plot <- ggplot(data=regular) + # Plotting regular data frame
geom_point(mapping=aes(Score,Count)) +
ggtitle("Scores for Regular Section")
regular_plot
sports_plot <- ggplot(data=sports) + # Plotting sports data frame
geom_point(mapping=aes(Score,Count)) +
ggtitle("Scores for Sports Section")
sports_plot
combined_plot <- ggplot() + # Combining the data frames to plot
geom_point(data=regular, aes(Score, Count),
fill = "green", color = "black",
size = 2, shape =21) +
geom_point(data=sports, aes(Score,Count),
fill = "red", color = "black",
size = 2, shape = 21) +
geom_vline(xintercept = regular_mean, color = "green") + # Adds a vertical
# mean line for the regular scores
geom_vline(xintercept = sports_mean, color = "red") + # Adds a vertical mean
# line for the sports scores
labs(x="Number of Students Scoring", y="Scores") +
ggtitle("Combined Plots")
combined_plot
regular_mean <- mean(regular$Score) # Calculates the mean of the "Regular"
# section scores
sports_mean <- mean(sports$Score) # Calculates the mean of the "Sports"
# section scores
# 4a. Comparing and contrasting the point distributions between the two section,
# looking at both tendency and consistency: Can you say that one section tended
# to score more points than the other?
# Based on the plots, it appears that the "Sports" section has scored more
# points overall. This can be observed by the number of red dots over the mean
# line versus green dots over the mean line for the regular section.
# 4b. Did every student in one section score more points than every student in
# the other section? If not, explain what a statistical tendency means in
# this context.
# No, every student in one section did not score more than every student in the
# other section. There would be a clear divide and separation between the colors
# of the dots in the combined plot. Statistical tendency in this context refers
# to mean of the scores for each section. With the "sports" section there tends
# to be more scores above the mean.
# 4c. What could be one additional variable that was not mentioned in the
# narrative that could be influencing the point distributions between the
# two sections?
# Another variable that was not mentioned, that could be influencing the point
# distribution, is the exact examples used in the "Regular" section. By dividing
# the sections further a better analysis and data points can be gained.
source("~/DSC520 Assignment PDFs/Assignment 4_2.R", echo=TRUE)
head(df)
library(datasets)
library(dplyr)
data("iris")
df <- iris
head(df)
setwd("~/Data Science Masters/DSC630 - Predictive Analytics/Assignments")
df = read.csv("Datasets/dodgers-2022.csv")
head(df)
